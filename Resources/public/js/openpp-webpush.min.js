(function(h){function g(a){var d={swPath:"/serviceworker.js",keyPath:"/api/push/key/publicKey",registerPath:"/api/push/device/web/register",unregisterPath:"/api/push/device/web/unregister",applicationId:null};a=a||{};for(var f in d)"undefined"===typeof a[f]&&(a[f]=d[f]);this.swPath=a.swPath;this.keyPath=a.keyPath;this.registerPath=a.registerPath;this.unregisterPath=a.unregisterPath;this.applicationId=a.applicationId;this._listeners=this._registration=this._subscription=this._serverPublicKey=null;
b=this}var b=null;g.Event=function(a){this.type=a};var c=g.prototype;c.addEventListener=function(a,d){var b=this._listeners=this._listeners||{},e=b[a];e&&this.removeEventListener(a,d);(e=b[a])?e.push(d):b[a]=[d];return d};c.removeEventListener=function(a,b){var f=this._listeners;if(f){var e=f[a];if(e)for(var c=0,g=e.length;c<g;c++)if(e[c]==b){1==g?delete f[a]:e.splice(c,1);break}}};c.dispatchEvent=function(a){if("string"==typeof a){var d=b._listeners;if(!d||!d[a])return!0;a=new g.Event(a)}d=b._listeners;
if(a&&d&&(d=d[a.type])&&d.length)for(var d=d.slice(),f=0;f<d.length;f++){var c=d[f];c.handleEvent?c.handleEvent(a):c(a)}};c._triggerUnsupportedEvent=function(a){var d=new g.Event("unsupported");d.message=a;b.dispatchEvent(d)};c._triggerErrorEvent=function(a){var d=new g.Event("error");d.message=a;b.dispatchEvent(d)};c._triggerStateChangeEvent=function(a){var d=new g.Event("statechange");d.state=a;b.dispatchEvent(d)};c.initialize=function(){b.isServiceWorkerSupported()?navigator.serviceWorker.register(b.swPath).then(b._checkSubscription)["catch"](function(a){console.log("Failed to register the service worker."+
a);b._triggerErrorEvent("Failed to register the service worker.")}):(console.log('Unsupported property "serviceWorker" in navigator.'),b._triggerUnsupportedEvent('Unsupported property "serviceWorker" in navigator.'))};c.isServiceWorkerSupported=function(){return"serviceWorker"in navigator?!0:!1};c.setApplicationId=function(a){this.applicationId=a};c.togglePushRequest=function(a){a?b._requestPermission():b._unsubscribe()};c._requestPermission=function(){Notification.requestPermission(function(a){"denied"!==
a&&b._subscribe()})};c._checkSubscription=function(a){"pushManager"in a?b._fetchServerPublicKey().then(function(d){a.pushManager.getSubscription().then(function(a){a?(b._subscription=a,b._triggerStateChangeEvent("subscribing")):b._triggerStateChangeEvent("unsubscribing")})["catch"](function(a){b._triggerErrorEvent(a)})})["catch"](function(a){b._triggerErrorEvent(a)}):(console.log('Unsupported property "pushManager" in ServiceWorkerRegistration.'),b._triggerUnsupportedEvent('Unsupported property "pushManager" in ServiceWorkerRegistration.'))};
c._subscribe=function(){navigator.serviceWorker.getRegistration().then(function(a){a?a.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:b._serverPublicKey}).then(function(a){b._subscription=a;b._register(a)})["catch"](function(a){console.log("Failed to subscribe."+a);b._triggerErrorEvent("Failed to subscribe.")}):b._triggerErrorEvent("ServiceWorker is not registered.")})};c._unsubscribe=function(){b._subscription&&(b._unregister(b._subscription),b._subscription.unsubscribe(),b._subscription=
null,b._triggerStateChangeEvent("unsubscribing"))};c._encodeBase64URL=function(a){return btoa(String.fromCharCode.apply(null,new Uint8Array(a))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")};c._decodeBase64URL=function(a){a=atob(a.replace(/\-/g,"+").replace(/_/g,"/"));for(var b=new Uint8Array(a.length),c=0;c<a.length;c++)b[c]=a.charCodeAt(c);return b};c._fetchServerPublicKey=function(){return new Promise(function(a,d){fetch(b.keyPath).then(function(a){return a.text()}).then(function(c){try{b._serverPublicKey=
b._decodeBase64URL(c),a(b._serverPublicKey)}catch(e){console.log("Failed to fetch the server public key."+e),d("Failed to fetch the server public key.")}})})};c._register=function(a){if("getKey"in a){var d=b._encodeBase64URL(a.getKey("p256dh"));try{var c=b._encodeBase64URL(a.getKey("auth"))}catch(e){console.log("Failed to get authorization token."+e),b._triggerUnsupportedEvent("Failed to get authorization token.")}a={application_id:(new URL(location.href)).origin,endpoint:a.endpoint,key:d,auth:c};
b.applicationId&&(a.application_id=b.applicationId);fetch(b.registerPath,{method:"POST",body:JSON.stringify(a),headers:{"Content-Type":"application/json"}}).then(function(a){return a.json()}).then(function(a){"code"in a?(console.log(a.message),b._triggerErrorEvent("Faild to register to the server. "+a.message)):b._registration=a})}else console.log('Undefined function "getKey" in PushSubscription.'),b._triggerUnsupportedEvent('Undefined function "getKey" in PushSubscription.')};c._unregister=function(a){a=
{application_id:(new URL(location.href)).origin,endpoint:a.endpoint};b.applicationId&&(a.application_id=b.applicationId);fetch(b.unregisterPath,{method:"POST",body:JSON.stringify(a),headers:{"Content-Type":"application/json"}}).then(function(a){return a.json()}).then(function(a){"code"in a?(console.log(a.message),b._triggerErrorEvent("Faild to unregister from the server. "+a.message)):b._registration=null})};h.OpenppWebPush=g})(window);

